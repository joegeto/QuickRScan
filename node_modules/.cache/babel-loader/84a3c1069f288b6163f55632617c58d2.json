{"ast":null,"code":"import _slicedToArray from \"/Users/peterlin/QuickRScan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/peterlin/QuickRScan/src/views/LoginPage/LoginPage.js\";\nimport React, { useState, useEffect } from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Email from \"@material-ui/icons/Email\";\nimport People from \"@material-ui/icons/People\"; // core components\n\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport styles from \"assets/jss/material-kit-react/views/loginPage.js\";\nimport image from \"assets/img/bg7.jpg\";\nimport { loginWithGoogle } from \"views/LoginPage/LoginAuth\";\nimport { firebaseAuth } from \"config/FirebaseConfig\";\nvar firebaseAuthKey = \"firebaseAuthInProgress\";\nvar appTokenKey = \"appToken\";\nvar useStyles = makeStyles(styles);\nexport default function LoginPage(props) {\n  var _React$useState = React.useState(\"cardHidden\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      cardAnimaton = _React$useState2[0],\n      setCardAnimation = _React$useState2[1];\n\n  setTimeout(function () {\n    setCardAnimation(\"\");\n  }, 700);\n  var classes = useStyles();\n  var rest = Object.assign({}, props);\n\n  var handleGoogleLogin = function handleGoogleLogin() {\n    loginWithGoogle()[\"catch\"](function (err) {\n      localStorage.removeItem(firebaseAuthKey);\n    }); // this will set the splashscreen until its overridden by the real firebaseAuthKey\n\n    localStorage.setItem(firebaseAuthKey, \"1\");\n  };\n\n  useEffect(function () {\n    if (localStorage.getItem(appTokenKey)) {\n      props.history.push(\"/content-page\");\n      return;\n    }\n\n    firebaseAuth().onAuthStateChanged(function (user) {\n      if (user) {\n        localStorage.removeItem(firebaseAuthKey);\n        localStorage.setItem(appTokenKey, user.uid);\n        props.history.push(\"/content-page\");\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, Object.assign({\n    absolute: true,\n    color: \"transparent\",\n    brand: \"Material Kit React\",\n    rightLinks: /*#__PURE__*/React.createElement(HeaderLinks, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    })\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pageHeader,\n    style: {\n      backgroundImage: \"url(\" + image + \")\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"top center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes[cardAnimaton],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    className: classes.cardHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.socialLine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    justIcon: true //href=\"#pablo\"\n    ,\n    target: \"_blank\",\n    color: \"transparent\",\n    onClick: handleGoogleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fab fa-google-plus-g\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }))))))))), /*#__PURE__*/React.createElement(Footer, {\n    whiteFont: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/peterlin/QuickRScan/src/views/LoginPage/LoginPage.js"],"names":["React","useState","useEffect","makeStyles","InputAdornment","Icon","Email","People","Header","HeaderLinks","Footer","GridContainer","GridItem","Button","Card","CardBody","CardHeader","CardFooter","CustomInput","styles","image","loginWithGoogle","firebaseAuth","firebaseAuthKey","appTokenKey","useStyles","LoginPage","props","cardAnimaton","setCardAnimation","setTimeout","classes","rest","handleGoogleLogin","err","localStorage","removeItem","setItem","getItem","history","push","onAuthStateChanged","user","uid","pageHeader","backgroundImage","backgroundSize","backgroundPosition","container","form","cardHeader","socialLine"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Email from \"@material-ui/icons/Email\";\nimport People from \"@material-ui/icons/People\";\n// core components\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\n\nimport styles from \"assets/jss/material-kit-react/views/loginPage.js\";\nimport image from \"assets/img/bg7.jpg\";\n\nimport { loginWithGoogle } from \"views/LoginPage/LoginAuth\";\nimport { firebaseAuth } from \"config/FirebaseConfig\";\n\nconst firebaseAuthKey = \"firebaseAuthInProgress\";\nconst appTokenKey = \"appToken\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function LoginPage(props) {\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n  setTimeout(function() {\n    setCardAnimation(\"\");\n  }, 700);\n  const classes = useStyles();\n  const { ...rest } = props;\n\n  const handleGoogleLogin = () => {\n    loginWithGoogle().catch((err) => {\n      localStorage.removeItem(firebaseAuthKey);\n    });\n\n    // this will set the splashscreen until its overridden by the real firebaseAuthKey\n    localStorage.setItem(firebaseAuthKey, \"1\");\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(appTokenKey)) {\n      props.history.push(\"/content-page\");\n      return;\n    }\n\n    firebaseAuth().onAuthStateChanged((user) => {\n      if (user) {\n        localStorage.removeItem(firebaseAuthKey);\n        localStorage.setItem(appTokenKey, user.uid);\n        props.history.push(\"/content-page\");\n      }\n    });\n  }, []);\n\n  return (\n    <div>\n      <Header\n        absolute\n        color=\"transparent\"\n        brand=\"Material Kit React\"\n        rightLinks={<HeaderLinks />}\n        {...rest}\n      />\n      <div\n        className={classes.pageHeader}\n        style={{\n          backgroundImage: \"url(\" + image + \")\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"top center\",\n        }}\n      >\n        <div className={classes.container}>\n          <GridContainer justify=\"center\">\n            <GridItem xs={12} sm={12} md={4}>\n              <Card className={classes[cardAnimaton]}>\n                <form className={classes.form}>\n                  <CardHeader color=\"primary\" className={classes.cardHeader}>\n                    <h4>Login</h4>\n                    <div className={classes.socialLine}>\n                      {/* <Button\n                        justIcon\n                        href=\"#pablo\"\n                        target=\"_blank\"\n                        color=\"transparent\"\n                        onClick={e => e.preventDefault()}\n                      >\n                        <i className={\"fab fa-twitter\"} />\n                      </Button>\n                      <Button\n                        justIcon\n                        href=\"#pablo\"\n                        target=\"_blank\"\n                        color=\"transparent\"\n                        onClick={e => e.preventDefault()}\n                      >\n                        <i className={\"fab fa-facebook\"} />\n                      </Button> */}\n                      <Button\n                        justIcon\n                        //href=\"#pablo\"\n                        target=\"_blank\"\n                        color=\"transparent\"\n                        onClick={handleGoogleLogin}\n                      >\n                        <i className={\"fab fa-google-plus-g\"} />\n                      </Button>\n                    </div>\n                  </CardHeader>\n                  {/* <p className={classes.divider}>Or Be Classical</p> */}\n                  {/* <CardBody>\n                    <CustomInput\n                      labelText=\"First Name...\"\n                      id=\"first\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        type: \"text\",\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <People className={classes.inputIconsColor} />\n                          </InputAdornment>\n                        )\n                      }}\n                    />\n                    <CustomInput\n                      labelText=\"Email...\"\n                      id=\"email\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        type: \"email\",\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <Email className={classes.inputIconsColor} />\n                          </InputAdornment>\n                        )\n                      }}\n                    />\n                    <CustomInput\n                      labelText=\"Password\"\n                      id=\"pass\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        type: \"password\",\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <Icon className={classes.inputIconsColor}>\n                              lock_outline\n                            </Icon>\n                          </InputAdornment>\n                        ),\n                        autoComplete: \"off\"\n                      }}\n                    />\n                  </CardBody>\n                  <CardFooter className={classes.cardFooter}>\n                    <Button simple color=\"primary\" size=\"lg\">\n                      Get started\n                    </Button>\n                  </CardFooter> */}\n                </form>\n              </Card>\n            </GridItem>\n          </GridContainer>\n        </div>\n        <Footer whiteFont />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}